{"mappings":"AAsBA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,EAAe,C,SAACL,E,MAAUC,GAE9B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAERG,EAAOH,EAAa,G,CA9BVI,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAmBC,GACjBA,EAAKC,iBAEL,IAAIC,EAAQC,OAAOH,EAAKI,cAAcf,MAAMgB,OACxCC,EAAOH,OAAOH,EAAKI,cAAcE,KAAKD,OACtCE,EAASJ,OAAOH,EAAKI,cAAcG,OAAOF,OAEhD,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACvBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBvB,QAAiBC,MAAU,IAE7DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBqB,QAAQC,IAAI,sBAAoBvB,QAAeC,MAAU,IAE7Da,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["const newForm = document.querySelector('.form');\nnewForm.addEventListener('submit', onNewForm);\n\nfunction onNewForm(elem){\n  elem.preventDefault();\n \n  let delay = Number(elem.currentTarget.delay.value);\n  let step = Number(elem.currentTarget.step.value);\n  let amount = Number(elem.currentTarget.amount.value);\n\nfor (let position = 1; position <= amount; position += 1) {\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\ndelay += step;\n}\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promiseValue = {position, delay};\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseValue);\n    }\n      reject(promiseValue);\n  })\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","elem","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","console","log","catch"],"version":3,"file":"03-promises.b6e162b7.js.map"}